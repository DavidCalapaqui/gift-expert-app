{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAOlB,SAEE,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAtBkB,SAACP,GAErBF,EAAcE,EAAEQ,OAAOF,a,+BCPjBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEdC,EAFc,0DAE2CC,UAAUH,GAFrD,sDAGDI,MAAMF,GAHL,cAGdG,EAHc,gBAICA,EAAKC,OAJN,uBAIbC,EAJa,EAIbA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVtB,kBAcbM,GAda,4CAAH,sDCARO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIpC,OACI,sBAAKc,UAAU,yCAAf,UAEI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCLHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAGrB,ECJwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAU,WAENxB,EAASC,GAAWwB,MAAK,SAAAC,GAErBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKlB,CAACpB,IAEGqB,EDhByBK,CAAa1B,GAAhCa,EAAb,EAAON,KAAca,EAArB,EAAqBA,QAErB,OAEI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEX,qBAAKA,UAAU,YAAf,SAIMH,EAAOJ,KAAI,SAACC,GAAD,OACN,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEoBlBgB,EArCM,WAGjB,MAAoCzC,mBAAS,CAAC,SAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAQA,OAEI,qCACC,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGD,6BAEO2C,EAAWnB,KAAI,SAACT,GAAD,OACX,cAAC,EAAD,CAGAA,SAAWA,GADNA,Y,MCxBxB6B,IAASC,OAEL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f532aba1.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('')\r\n    \r\n    const handleInputChange=(e)=>{\r\n        //console.log(e.target.value)\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        \r\n        if(inputValue.trim().length>2){\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n        \r\n\r\n\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n         \r\n          <input \r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={handleInputChange}\r\n          />\r\n          \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\n export const getGifs = async(category)=>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=I6uBshdCz6ZzPLNEem9dWto2DP9NBBt4`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img=>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url // ? porsiacaso no venga el zelda\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    \r\n    //console.log({id, title, url})\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            \r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React  from 'react' //use effect permite ejecutar codigo con una condicion\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport {GifGridItem} from './GifGridItem'    \r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    \r\n    const {data: images, loading} = useFetchGifs(category);\r\n  \r\n    return (\r\n        \r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            \r\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n            \r\n            {<div className='card-grid'>\r\n\r\n\r\n                {\r\n                   images.map((img)=>(\r\n                        <GifGridItem \r\n                        key={img.id} \r\n                        {...img}\r\n                         />\r\n                    )) \r\n                }\r\n         \r\n            </div> }\r\n            \r\n        </>\r\n        \r\n        \r\n    )\r\n}\r\n","\r\nimport {useState, useEffect} from 'react'\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) =>{\r\n \r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs( category ).then(imgs=>{\r\n\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        }          \r\n        )\r\n\r\n    }, [category])\r\n\r\n    return state; \r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n\r\nconst GifExpertApp = ()=>{\r\n\r\n    \r\n    const [categories, setCategories] = useState(['doge' ]);\r\n\r\n    //const handleAdd = ()=>{\r\n    //    //setCategories(['X-Men' ,...categories ]);\r\n    //    setCategories(cats => [...cats, 'Cat Man']);\r\n    //\r\n    //}\r\n    \r\n    return(\r\n\r\n        <>\r\n         <h2>APP DE GIFS :V</h2>\r\n         <AddCategory setCategories={setCategories}/>\r\n         <hr />\r\n\r\n         \r\n        <ol>\r\n           {\r\n               categories.map((category)=>(\r\n                   <GifGrid \r\n                    \r\n                   key={category}\r\n                   category={ category }\r\n                    \r\n                   />\r\n               ))\r\n           }\r\n        </ol>\r\n         \r\n        </>\r\n    )\r\n   \r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\nimport './index.css'\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n    document.getElementById('root')\n \n);\n\n//api key giphi\n// I6uBshdCz6ZzPLNEem9dWto2DP9NBBt4"],"sourceRoot":""}